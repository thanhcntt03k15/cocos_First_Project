{"version":3,"sources":["assets\\Scripts\\Star.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;AAElF,+BAA0B;AAEpB,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAsC,4BAAY;IAAlD;QAAA,qEAwCC;QAtCG,6GAA6G;QAE7G,gBAAU,GAAW,CAAC,CAAC;;IAoC3B,CAAC;IAjCG,oCAAiB,GAAjB;QACI,oCAAoC;QACpC,IAAI,SAAS,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAC7B,SAAS,GAAG,cAAI,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;QAChD,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvB,sDAAsD;QACtD,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC;QACnD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,2BAAQ,GAAR;QACI,iGAAiG;QACjG,cAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;QAErC,4CAA4C;QAC5C,cAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;QAElC,4CAA4C;QAC5C,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IACxB,CAAC;IAED,yBAAM,GAAN,UAAO,EAAU;QACb,oHAAoH;QACpH,IAAI,IAAI,CAAC,iBAAiB,EAAE,GAAG,IAAI,CAAC,UAAU,EAAC;YAC3C,yBAAyB;YACzB,IAAI,CAAC,QAAQ,CAAC;YACd,OAAO;SACV;QACD,uEAAuE;QACvE,IAAI,YAAY,GAAG,CAAC,GAAG,cAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,GAAC,cAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC;QACtF,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,CAAC,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC;IACnF,CAAC;IAnCD;QADC,QAAQ;gDACc;IAJN,QAAQ;QAD5B,OAAO;OACa,QAAQ,CAwC5B;IAAD,eAAC;CAxCD,AAwCC,CAxCqC,EAAE,CAAC,SAAS,GAwCjD;kBAxCoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport Game from \"./Game\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    // Khi khoảng cách giữa ngôi sao và nhân vật chính nhỏ hơn giá trị này, việc thu thập điểm sẽ được hoàn thành\r\n    @property\r\n    pickRadius: number = 0;\r\n\r\n\r\n    getPlayerDistance(){\r\n        // xác định khoảng cách theo Player \r\n        var playerPos = cc.v3(0,1,1);\r\n        playerPos = Game.arguments.player.getPosition();\r\n        console.log(playerPos);\r\n        // Tính khoảng cách giữa hai nút theo vị trí của chúng\r\n        var dist = this.node.position.sub(playerPos).mag();\r\n        return dist;\r\n    }\r\n\r\n    onPicked(){\r\n        //Khi những ngôi sao bắt đầu được thu thập, tự động gọi trong Game script để tạo một ngôi sao mới\r\n        Game.arguments.player.spawnNewStar();\r\n\r\n        // Gọi phương pháp tính điểm của Game script\r\n        Game.arguments.player.gainScore();\r\n\r\n        // Sau đó phá hủy node của ngôi sao hiện tại\r\n        this.node.destroy();\r\n    }\r\n\r\n    update(dt: number): void {\r\n        // Xác định xem khoảng cách giữa ngôi sao và nhân vật chính có nhỏ hơn khoảng cách thu thập cho mỗi khung hình không\r\n        if (this.getPlayerDistance() < this.pickRadius){\r\n            // gọi hành động thu thập\r\n            this.onPicked;\r\n            return;\r\n        }\r\n        // Cập nhật độ trong suốt của ngôi sao theo thời gian trong Game script\r\n        var opacityRatio = 1 - Game.arguments.player.timer/Game.arguments.player.starDuration;\r\n        var minOpacity = 50;\r\n        this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\r\n    }\r\n}\r\n"]}